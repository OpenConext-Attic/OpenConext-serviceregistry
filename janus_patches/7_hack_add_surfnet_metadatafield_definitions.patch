Index: modules/janus/dictionaries/metadatafields.definition.json
===================================================================
--- modules/janus/dictionaries/metadatafields.definition.json	(revision 810)
+++ modules/janus/dictionaries/metadatafields.definition.json	(revision )
@@ -26,6 +26,9 @@
         "certData": {
             "en": "Base 64 encoded certificate used for this connection."
         },
+        "certData2": {
+            "en": "Fallback base 64 encoded certificate used for this connection. Most likely used when this entity migrates to a new signing certificate."
+        },
         "certFingerprint": {
             "en": "One or more fingerprint for the certificate userd for the connection."
         },
@@ -78,12 +81,99 @@
             "en": "Validate signature on requests and responses"
         },
         "base64attributes": {
-            "en": "Base64 encode attributes"
+            "en": "NOT USED - Base64 encode attributes"
         },
         "assertion.encryption": {
             "en": "Is assertions from this connection encrypted?"
         },
         "NameIDFormat": {
             "en": "NameID supported by this connection."
+        },
+        "displayName": {
+            "en": "The display name for this connection"
+        },
+        "coin_gadgetbaseurl": {
+            "en": "Used to lookup the OAuth parameters belonging to a gadget. Format is a regular expression matching the URL of the gadget's XML descriptor. Example: https://gadgets.store.com/.* Also used when Shindig acts as the provider in 2-legged OAuth"
+        },
+        "coin_oauthcret": {
+            "en": "When Shindig acts as the provider in 2- or 3-legged OAuth with keytype HMAC_SHA1, this is the secret. Not used when Shindig is the consumer."
+        },
+        "coin_oauth_consumer_key": {
+            "en": "When Shindig acts as the consumer in 3-legged OAuth with keytype HMAC_SHA1 or RSA_PRIVATE, this is the consumer key. When Shindig is the provider, this should be a URL matching the consumer (see coin_gadgetbaseurl)."
+        },
+        "coin_oauth_consumer_secret": {
+            "en": "When Shindig acts as the consumer in 3-legged OAuth with keytype HMAC_SHA1, this is the consumer secret. When using keytype RSA_PRIVATE, this entry is not necessary but needs to be filled anyway (use a dummy value). Leave blank when Shindig is the provider"
+        },
+        "coin_oauth_key_type": {
+            "en": "The OAuth key type. Can be HMAC_SHA1 or RSA_PRIVATE"
+        },
+        "coin_oauth_public_key": {
+            "en": "When Shindig acts as the provider in 3-legged OAuth with keytype RSA_PRIVATE, this is the consumer's public key."
+        },
+        "coin_oauth_app_title": {
+            "en": "OAuth application title. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
+        },
+        "coin_oauth_app_description": {
+            "en": "OAuth application description. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
+        },
+        "coin_oauth_app_thumbnail": {
+            "en": "The URL of the OAuth application logo image. This URL must be accessible from the internet. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
+        },
+        "coin_oauth_app_icon": {
+            "en": "The URL of the OAuth application icon image. This URL must be accessible from the internet. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
+        },
+        "coin_oauth_callback_url": {
+            "en": "The OAuth callback URL"
+        },
+        "coin_is_provision_sp": {
+            "en": "Indicates if this Service Provider needs JIT provisioning. If it is absent or not checked then NOTHING will be provisioned"
+        },
+        "coin_provision_domain": {
+            "en": "The domain for which users and groups will be provisioned. It is optional but needed for the Google provisioning implementation"
+        },
+        "coin_provision_admin": {
+            "en": "The username of the 'power' user that can create users and groups"
+        },
+        "coin_provision_password": {
+            "en": "The password of the power user"
+        },
+        "coin_provision_type": {
+            "en": "The type of provisioning. Currently only Google is implemented"
+        },
+        "coin_userContactPoint_url": {
+            "en": "URL of the Service Provider help desk website for an end user"
+        },
+        "coin_userContactPoint_emailAddress": {
+            "en": "Service Provider help desk email address for an end user"
+        },
+        "coin_guest_qualifier": {
+            "en": "Can have the value None, Some or All. Indicates that no users from this IDP are marked as guest, some users are marked as guest or all users are marked as guest respectively"
+        },
+        "coin_alternate_private_key": {
+            "en": "Overrides the private signing key used by SURFconext for this Service Provider"
+        },
+        "coin_alternate_public_key": {
+            "en": "Overrides the public signing key used by SURFconext for this Service Provider"
+        },
+        "coin_eula": {
+            "en": "URL of the End User License Agreement for the service."
+        },
+        "logo_url": {
+            "en": "The URL of the IDP's logo image. This URL must be accessible from the internet"
+        },
+        "logo_width": {
+            "en": "NOT USED - The width of the IDP's logo image. Cannot be wider then 108px for SURFconext"
+        },
+        "logo_height": {
+            "en": "NOT USED - The height of the IDP's logo image. Cannot be higher then 48px for SURFconext"
+        },
+        "logo_href": {
+            "en": "NOT USED - The URL for the IDP's website"
+        },
+        "keywords": {
+            "en": "Space seperated list of keywords user's can search on in the WAYF screen"
+        },
+        "geoLocation": {
+            "en": "NOT USED - Physical location of this entity. Format is latitude,longitude in degrees."
         }
-}
+}
\ No newline at end of file
