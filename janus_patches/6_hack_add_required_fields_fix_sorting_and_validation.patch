Index: modules/janus/lib/EntityController.php
===================================================================
--- modules/janus/lib/EntityController.php	(revision 691)
+++ modules/janus/lib/EntityController.php	(revision )
@@ -173,7 +173,7 @@
         $this->_metadata = array();
         $rs = $st->fetchAll(PDO::FETCH_ASSOC);
 
-        $definitions = $this->_config->getArray('metadatafields.' . $this->_entity->getType());
+        $definitions = $this->_expand_definition_keys($this->_config->getArray('metadatafields.' . $this->_entity->getType()));
 
         foreach ($rs AS $row) {
             $metadata = new sspmod_janus_Metadata($this->_config->getValue('store'));
@@ -191,6 +191,22 @@
         return true;
     }
 
+    private function _expand_definition_keys(array $definitions)
+    {
+        $result = array();
+        foreach ($definitions AS $key => $value) {
+            if (strstr($key, '#') && isset($value['supported'])) {
+                $supported_idioms = $value['supported'];
+                foreach ($supported_idioms AS $supported_idiom) {
+                    $result[str_replace('#', $supported_idiom, $key)] = $value;
+                }
+            } else {
+                $result[$key] = $value;
+            }
+        }
+        return $result;
+    }
+
     /**
      * Get entity metadata.
      *
Index: modules/janus/templates/editentity.php
===================================================================
--- modules/janus/templates/editentity.php	(revision 685)
+++ modules/janus/templates/editentity.php	(revision )
@@ -903,11 +921,11 @@
     echo '<td><h3>'. $this->t('tab_edit_entity_value') .'</h3></td>';
     echo '</tr>';
 
+    $i = 0;
     $meta_desc = $this->data['metadata_fields'];
     if(!$metadata = $this->data['metadata']) {
         echo "Not metadata for entity ". $this->data['entity']->getEntityId() . '<br /><br />';
     } else {
-        $i = 0;
         foreach($metadata AS $data) {
             $supported_idiom = null;
             $base_field_name = $this->data['metadata_base_field_names'][$data->getKey()];
@@ -923,10 +941,11 @@
             } else {
                 $requiredfield = false;
             }
+            $definition = $data->getDefinition();
 
             switch($metadata_field['type']) {
                 case 'text':
-                    $validate = isset($this->data['metadata_fields'][$data->getKey()]['validate']) ? 'onkeyup="validateInput(this, \'' . $this->data['metadata_fields'][$data->getKey()]['validate'] . '\');"' : '';
+                    $validate = isset($definition['validate']) ? 'onkeyup="validateInput(this, \'' . $definition['validate'] . '\');"' : '';
                     echo '<input class="width_100" type="text" name="edit-metadata-'. $data->getKey()  .'" value="'. $data->getValue()  .'" ' . $modifymetadata . ' ' . $validate . ' />';
                     break;
                 case 'boolean':
@@ -993,7 +1012,7 @@
                     </script>';
                     break;
                 default:
-                    $validate = isset($this->data['metadata_fields'][$data->getKey()]['validate']) ? 'onkeyup="validateInput(this, \'' . $this->data['metadata_fields'][$data->getKey()]['validate'] . '\');"' : '';
+                    $validate = isset($definition['validate']) ? 'onkeyup="validateInput(this, \'' . $definition['validate'] . '\');"' : '';
                     echo '<input class="width_100" type="text" name="edit-metadata-'. $data->getKey()  .'" value="'. $data->getValue()  .'" ' . $modifymetadata . ' ' . $validate . ' />';
             }
             if(isset($supported_idiom)) {
@@ -1019,6 +1038,125 @@
     }
 
     if($this->data['uiguard']->hasPermission('addmetadata', $wfstate, $this->data['user']->getType())) {
+        // Add required (but not yet entered) metadata
+        if (isset($this->data['required_metadata'])) {
+            foreach($this->data['required_metadata'] as $required_metadata) {
+                echo '<tr id="add_meta" class="'. ($i % 2 == 0 ? 'even' : 'odd'). '"  onmouseout="$(\'#metadata-desc-' . strtr($required_metadata->getkey(), array(':' => '\\\:', '.' => '\\\.')) . '\').hide();" onmouseover="$(\'#metadata-desc-' . strtr($required_metadata->getkey(), array(':' => '\\\:', '.' => '\\\.')) . '\').show();">';
+                echo '<td>';
+                echo '<select id="metadata_select" name="meta_key" onchange="changeId(this);" class="metadata_selector">';
+                echo '<option value="NULL">-- '. $this->t('tab_edit_entity_select') .' --</option>';
+                foreach($this->data['metadata_fields'] AS $metadata_key => $metadata_val) {
+                    if(isset($metadata_val['supported'])) {
+                        $supported_idioms = $metadata_val['supported'];
+                        foreach($supported_idioms as $supported_idiom) {
+                            $name = str_replace('#', $supported_idiom, $metadata_key);
+                            $selected = $required_metadata->getKey() == $name ? 'SELECTED' : '';
+                            if(array_key_exists('required', $metadata_val) && $metadata_val['required'] === true) {
+                                echo '<option class="addmetadata" value="'. $name . '" '.$selected.'>'. $name. '</option>';
+                            } else {
+                                echo '<option value="', $name, '" '.$selected.'>'. $name . '</option>';
+                            }
+                        }
+                    }
+                    else {
+                        $selected = $required_metadata->getKey() == $metadata_key ? 'SELECTED' : '';
+                        if(array_key_exists('required', $metadata_val) && $metadata_val['required'] === true) {
+                            echo '<option class="addmetadata" value="', $metadata_key, '" '.$selected.'>', $metadata_key, '</option>';
+                        } else {
+                            echo '<option value="', $metadata_key, '" '.$selected.'>', $metadata_key, '</option>';
+                        }
+                    }
+                }
+                echo '</select>';
+                echo '</td>';
+                echo '<td>';
+                $metadata_field = $required_metadata->getDefinition();
+                if(isset($metadata_field['required'])) {
+                    $requiredfield = $metadata_field['required'];
+                } else {
+                    $requiredfield = false;
+                }
+
+                switch($metadata_field['type']) {
+                    case 'text':
+                        $validate = isset($metadata_field['validate']) ? 'onkeyup="validateInput(this, \'' . $metadata_field['validate'] . '\');"' : '';
+                        echo '<input class="width_100" type="text" name="meta_value['. $required_metadata->getKey() .']" value="'. $required_metadata->getValue() .'" ' . $modifymetadata . ' ' . $validate . ' />';
+                        break;
+                    case 'boolean':
+                        if($required_metadata->getValue() == true) {
+                            $checked_true = 'checked="checked"';
+                            $checked_false = '';
+                        } else {
+                            $checked_false = 'checked="checked"';
+                            $checked_true = '';
+                        }
+                        if($modifymetadata == 'readonly="readonly"') {
+                            echo '<input value="true" type="checkbox" class="metadata_checkbox" name="meta_value['. $required_metadata->getKey()  .'-TRUE]" '. $checked_true .' disabled="disabled" onclick="changeFalse(this);" />';
+                        } else {
+                            echo '<input value="true" type="checkbox" class="metadata_checkbox" name="meta_value['. $required_metadata->getKey()  .'-TRUE]" '. $checked_true .' onclick="changeFalse(this);" />';
+                        }
+                        echo '<input value="false" type="checkbox" class="display_none" name="meta_value['. $required_metadata->getKey()  .'-FALSE]" '. $checked_false .' ' . $modifymetadata . ' />';
+                        break;
+                    case 'select':
+                        if(isset($metadata_field['select_values']) &&
+                           is_array($metadata_field['select_values'])) {
+                            $default = null;
+                            if(isset($metadata_field['default'])) {
+                                $default = $metadata_field['default'];
+                            }
+                            $select_values = $metadata_field['select_values'];
+                            $actual_value = $required_metadata->getValue();
+                            echo '<select name="meta_value['. $required_metadata->getKey()  .']">';
+                            foreach($select_values as $select_value) {
+                                echo '<option value="'.$select_value.'"';
+                                if($select_value == $actual_value ||
+                                   (empty($value) && $select_value == $default)) {
+                                    echo 'selected="selected"';
+                                   }
+                                echo '>'.$select_value.'</option>';
+                            }
+                            echo '</select>';
+                            break;
+                        }
+                    case 'file':
+                        echo '<input type="file" name="meta_value['. $required_metadata->getKey()  .']" id="meta_value['. $required_metadata->getKey()  .']" />';
+                        echo '<script type="text/javascript">
+                        <!--
+                        $("input:file[name=meta_value['. $required_metadata->getKey() .']]").makeAsyncUploader({
+                            upload_url: "/'. $this->data['baseurlpath'] .'module.php/janus/AJAXRequestHandler.php",
+                            flash_url: "/'. $this->data['baseurlpath'] .'module.php/janus/resources/scripts/swfupload.swf",
+                            button_image_url: "/'. $this->data['baseurlpath'] .'module.php/janus/resources/scripts/blankButton.png",
+                            existingFilename: "'. $required_metadata->getValue() .'",
+                            disableDuringUpload: "INPUT[type=submit]",
+                            button_text: "<font face=\"Arial\" size=\"13pt\">'. $this->t('choose_file') .'</font>",';
+                        if(isset($metadata_field['maxsize'])) {
+                            echo 'file_size_limit: "' . $metadata_field['maxsize'] . '",' . "\n";
+                        }
+                        if(isset($metadata_field['filetype'])) {
+                            echo 'file_types: "' . $metadata_field['filetype'] . '",' . "\n";
+                        }
+                        echo 'post_params: {
+                                "PHPSESSID" : "'. $_COOKIE['PHPSESSID'] .'",
+                                "func" : "uploadFile",
+                                "eid" : "'. $this->data['entity']->getEid() .'",
+                                "index" : "edit-metadata-'. $required_metadata->getKey() .'"
+                            }
+                        });
+                        -->
+                        </script>';
+                        break;
+                    default:
+                        $validate = isset($metadata_field['validate']) ? 'onkeyup="validateInput(this, \'' . $metadata_field['validate'] . '\');"' : '';
+                        echo '<input class="width_100" type="text" name="meta_value['. $required_metadata->getKey()  .']" value="'. $required_metadata->getValue()  .'" ' . $modifymetadata . ' ' . $validate . ' />';
+                }
+                echo '<input type="checkbox" class="display_none" value="'. $required_metadata->getKey() .'" id="delete-matadata-'. $required_metadata->getKey() .'" name="delete-metadata[]" />';
+                echo '</td>';
+                echo '<td align="right" width="100px" class="metadata_control"><b><span></span></b>';
+                echo '</td>';
+                echo '</tr>';
+                $i++;
+            }
+        }
         echo '<tr id="add_meta">';
         echo '<td>';
         echo '<select id="metadata_select" name="meta_key" onchange="changeId(this);" class="metadata_selector">';
Index: modules/janus/www/editentity.php
===================================================================
--- modules/janus/www/editentity.php	(revision 653)
+++ modules/janus/www/editentity.php	(revision )
@@ -476,20 +521,18 @@
 }
 
 function cmp2($a, $b) {
-    global $et;
+    $definition_a = $a->getDefinition();
+    $definition_b = $b->getDefinition();
 
-    $a_base_key = $et->data['metadata_base_field_names'][$a->getKey()];
-    $b_base_key = $et->data['metadata_base_field_names'][$b->getKey()];
-
-    if(!isset($et->data['metadata_fields'][$a_base_key]) || !isset($et->data['metadata_fields'][$a_base_key]['order'])) {
+    if(!isset($definition_a) || !isset($definition_a['order'])) {
         return 1;
     }
-    else if(!isset($et->data['metadata_fields'][$b_base_key]) || !isset($et->data['metadata_fields'][$b_base_key]['order'])) {
+    else if(!isset($definition_b) || !isset($definition_b['order'])) {
         return -1;
     }
     else {
-        $aorder = $et->data['metadata_fields'][$a_base_key]['order'];
-        $border = $et->data['metadata_fields'][$b_base_key]['order'];        
+        $aorder = $definition_a['order'];
+        $border = $definition_b['order'];
 
         if ($aorder == $border) {
             return 0;
@@ -503,21 +546,84 @@
 
 $et->data['metadata'] = $mcontroller->getMetadata();
 
+// Include required Metadata fields that are not entered yet.
+function isset_metadata($metadata_field, array $metadata_array) {
+    foreach($metadata_array as $metadata_entry) {
+        if ($metadata_entry->getKey() == $metadata_field) {
+            return true;
+        }
+    }
+    return false;
+}
+
+function create_metadata(array $definition, $key) {
+    global $entity, $config;
+
+    $mField = new sspmod_janus_Metadata($config);
+    $mField->setKey($key);
+    $mField->setEid($entity->getEid());
+    $mField->setRevisionid($entity->getRevisionid());
+    $mField->setDefinition($definition);
+    $default_value = isset($definition['default']) ? $definition['default'] : '';
+    $mField->setValue($default_value);
+
+    return $mField;
+}
+
+function add_required_metadata(array $entity_metadata, array $metadata_fields) {
+    $result = array();
+
+    foreach($metadata_fields as $key => $definition) {
+        if (isset($definition['required']) && $definition['required']) {
+            // Expand the metadata fields (expand # to the supported fields)
+            if (strstr($key, '#') && $definition['supported']) {
+                foreach ($definition['supported'] as $supported_value) {
+                    $expanded_key = str_replace('#', $supported_value, $key);
+                    if (!isset_metadata($expanded_key, $entity_metadata)) {
+                        $result[] = create_metadata($definition, $expanded_key);
+                    }
+                }
+            } else if (!isset_metadata($key, $entity_metadata)) {
+                $result[] = create_metadata($definition, $key);
+            }
+        }
+    }
+    return $result;
+}
+
+$et->data['required_metadata'] = add_required_metadata($et->data['metadata'], $et->data['metadata_fields']);
+
 $et->data['metadata_base_field_names'] = array();
 
 foreach($et->data['metadata'] AS $data) {
     $key = $data->getKey();
     $key_splitted = explode(':', $key);
-    $possible_supported_idiom = array_pop($key_splitted);
-    $possible_metafield_key = str_replace(':'.$possible_supported_idiom,'',$key);
-    if(isset($et->data['metadata_fields'][$possible_metafield_key])) {
-        $et->data['metadata_base_field_names'][$key] = $possible_metafield_key;
+    $definition = $data->getDefinition();
+
+    if ($definition && $definition['supported']) {
+        $possible_idioms = convert_values_to_string($definition['supported']);
+
+        foreach ($key_splitted as $key_part) {
+            if (in_array($key_part, $possible_idioms)) {
+                $et->data['metadata_base_field_names'][$key] = str_replace($key_part, '#', $key);
-    }
+            }
-    else {
+        }
+    } else {
         $et->data['metadata_base_field_names'][$key] = $key;
     }
 }
 
+function convert_values_to_string(array $array)
+{
+    $result = array();
+    if ($array && count($array) > 0) {
+        foreach($array AS $key => $value) {
+            $result[$key] = (string) $value;
+        }
+    }
+    return $result;
+}
+
 // Sort metadata according to order
 uasort($et->data['metadata'], 'cmp2');
 
