diff -r -u '--exclude=.git' vendor/simplesamlphp/simplesamlphp/lib/SimpleSAML/Metadata/SAMLParser.php simplesamlphp-surfnet/lib/SimpleSAML/Metadata/SAMLParser.php
--- vendor/simplesamlphp/simplesamlphp/lib/SimpleSAML/Metadata/SAMLParser.php	2013-06-19 15:21:31.632445294 +0200
+++ vendor/simplesamlphp/simplesamlphp/lib/SimpleSAML/Metadata/SAMLParser.php	2013-05-10 11:35:28.005327909 +0200
@@ -648,11 +648,6 @@
 	 * @return Associative array with metadata or NULL if we are unable to generate metadata for a SAML 2.0 IdP.
 	 */
 	public function getMetadata20IdP() {
-
-		$ret = $this->getMetadataCommon();
-		$ret['metadata-set'] = 'saml20-idp-remote';
-
-
 		/* Find IdP information which supports the SAML 2.0 protocol. */
 		$idp = $this->getIdPDescriptors(self::$SAML20Protocols);
 		if(count($idp) === 0) {
@@ -662,6 +657,9 @@
 		/* We currently only look at the first IDP descriptor which supports SAML 2.0. */
 		$idp = $idp[0];
 
+        $ret = $this->getMetadataCommon();
+        $ret['metadata-set'] = 'saml20-idp-remote';
+
 		/* Add expire time to metadata. */
 		if (array_key_exists('expire', $idp)) {
 			$ret['expire'] = $idp['expire'];
@@ -682,6 +680,7 @@
 		/* Find the ArtifactResolutionService endpoint. */
 		$ret['ArtifactResolutionService'] = $idp['ArtifactResolutionService'];
 
+        $ret['NameIDFormats'] = $idp['nameIDFormats'];
 
 		/* Add public keys. */
 		if (!empty($idp['keys'])) {
